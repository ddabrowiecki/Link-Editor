{"ast":null,"code":"var _jsxFileName = \"/Users/dominic.dabrowiecki/Desktop/WebEditor/beacons-link-editor/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport LinkEditorCard from \"./Components/LinkEditorCard/LinkEditorCard\";\nimport LinkPreviewCard from \"./Components/LinkPreviewCard/LinkPreviewCard\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [linksInBackend, setLinksInBackend] = useState([]);\n  useEffect(() => {\n    function getInitialData() {\n      return fetch(\"https://retoolapi.dev/T6xAX6/links\").then(response => response.json());\n    }\n\n    getInitialData().then(result => setLinksInBackend(result));\n  }, []);\n\n  const updateLinks = linkObject => {\n    const newLinkList = linksInBackend.map(link => link.id === linkObject.id ? linkObject : link);\n    setLinksInBackend(newLinkList);\n  };\n\n  const handlePutRequest = linkObject => {};\n\n  const addLink = linkObject => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(linkObject)\n    };\n    fetch(\"https://retoolapi.dev/T6xAX6/links\", requestOptions).then(response => response.json()).then(link => console.log(link));\n  }; // setLinksInBackend(linksInBackend.push(link))\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(LinkEditorCard, {\n      className: \"link-editor-card\",\n      links: linksInBackend,\n      title: \"Add New Links\",\n      updateLinks: updateLinks,\n      addLink: addLink\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LinkPreviewCard, {\n      className: \"link-preview-card\",\n      links: linksInBackend,\n      title: \"Link Preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mqzr+A6JDz+77pdPl6ZqdTevgA0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dominic.dabrowiecki/Desktop/WebEditor/beacons-link-editor/src/App.js"],"names":["LinkEditorCard","LinkPreviewCard","useState","useEffect","App","linksInBackend","setLinksInBackend","getInitialData","fetch","then","response","json","result","updateLinks","linkObject","newLinkList","map","link","id","handlePutRequest","addLink","requestOptions","method","headers","body","JSON","stringify","console","log"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,cAAP,MAA2B,4CAA3B;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,aAASI,cAAT,GAA0B;AACxB,aAAOC,KAAK,CAAC,oCAAD,CAAL,CAA4CC,IAA5C,CAAkDC,QAAD,IACtDA,QAAQ,CAACC,IAAT,EADK,CAAP;AAGD;;AAEDJ,IAAAA,cAAc,GAAGE,IAAjB,CAAuBG,MAAD,IAAYN,iBAAiB,CAACM,MAAD,CAAnD;AACD,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMC,WAAW,GAAIC,UAAD,IAAgB;AAClC,UAAMC,WAAW,GAAGV,cAAc,CAACW,GAAf,CAAoBC,IAAD,IAAWA,IAAI,CAACC,EAAL,KAAYJ,UAAU,CAACI,EAAvB,GAA4BJ,UAA5B,GAAyCG,IAAvE,CAApB;AACAX,IAAAA,iBAAiB,CAACS,WAAD,CAAjB;AACD,GAHD;;AAKA,QAAMI,gBAAgB,GAAIL,UAAD,IAAgB,CAExC,CAFD;;AAIA,QAAMM,OAAO,GAAIN,UAAD,IAAgB;AAC9B,UAAMO,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAEnBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFU;AAGnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,UAAf;AAHa,KAAvB;AAKAN,IAAAA,KAAK,CAAC,oCAAD,EAAuCa,cAAvC,CAAL,CACCZ,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMQ,IAAI,IAAIU,OAAO,CAACC,GAAR,CAAYX,IAAZ,CAFd;AAGD,GATD,CAtBa,CAiCb;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,cAAD;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,MAAA,KAAK,EAAEZ,cAFT;AAGE,MAAA,KAAK,EAAE,eAHT;AAIE,MAAA,WAAW,EAAEQ,WAJf;AAKE,MAAA,OAAO,EAAEO;AALX;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,eAAD;AACE,MAAA,SAAS,EAAC,mBADZ;AAEE,MAAA,KAAK,EAAEf,cAFT;AAGE,MAAA,KAAK,EAAE;AAHT;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAnDQD,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport LinkEditorCard from \"./Components/LinkEditorCard/LinkEditorCard\";\nimport LinkPreviewCard from \"./Components/LinkPreviewCard/LinkPreviewCard\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [linksInBackend, setLinksInBackend] = useState([]);\n\n  useEffect(() => {\n    function getInitialData() {\n      return fetch(\"https://retoolapi.dev/T6xAX6/links\").then((response) =>\n        response.json()\n      );\n    }\n\n    getInitialData().then((result) => setLinksInBackend(result));\n  }, []);\n\n  const updateLinks = (linkObject) => {\n    const newLinkList = linksInBackend.map((link) => (link.id === linkObject.id ? linkObject : link));\n    setLinksInBackend(newLinkList)\n  };\n\n  const handlePutRequest = (linkObject) => {\n\n  }\n\n  const addLink = (linkObject) => {\n    const requestOptions = {\n      method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(linkObject)\n    }\n    fetch(\"https://retoolapi.dev/T6xAX6/links\", requestOptions)\n    .then(response => response.json())\n    .then(link => console.log(link));\n  }\n\n  // setLinksInBackend(linksInBackend.push(link))\n\n  return (\n    <div className=\"App\">\n      <LinkEditorCard\n        className=\"link-editor-card\"\n        links={linksInBackend}\n        title={\"Add New Links\"}\n        updateLinks={updateLinks}\n        addLink={addLink}\n      />\n      <LinkPreviewCard\n        className=\"link-preview-card\"\n        links={linksInBackend}\n        title={\"Link Preview\"}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}