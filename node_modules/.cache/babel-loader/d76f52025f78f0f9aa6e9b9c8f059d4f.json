{"ast":null,"code":"var _jsxFileName = \"/Users/dominic.dabrowiecki/Desktop/Link-Editor/link-editor/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport LinkEditorCard from \"./Components/LinkEditorCard/LinkEditorCard\";\nimport LinkPreviewCard from \"./Components/LinkPreviewCard/LinkPreviewCard\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [linksInBackend, setLinksInBackend] = useState([]);\n  useEffect(() => {\n    function getInitialData() {\n      return fetch(\"https://retoolapi.dev/T6xAX6/links\").then(response => response.json());\n    }\n\n    getInitialData().then(result => setLinksInBackend(result));\n  }, []);\n\n  const updateLinks = linkObject => {\n    const requestOptions = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(linkObject)\n    };\n    fetch(`https://retoolapi.dev/T6xAX6/links/${linkObject.id}`, requestOptions).then(response => response.json()).then(setLinksInBackend(linksInBackend.map(link => link.id === linkObject.id ? linkObject : link)));\n  };\n\n  const updateClicks = linkObject => {\n    const {\n      clicks\n    } = linkObject;\n    const requestOptions = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        clicks: clicks\n      })\n    };\n    fetch(`https://retoolapi.dev/T6xAX6/links/${linkObject.id}`, requestOptions);\n  };\n\n  const addLink = linkObject => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(linkObject)\n    };\n    fetch(\"https://retoolapi.dev/T6xAX6/links\", requestOptions).then(response => response.json()).then(link => setLinksInBackend(linksInBackend.concat([link])));\n  };\n\n  const deleteLink = id => {\n    const requestOptions = {\n      method: \"DELETE\"\n    };\n    fetch(`https://retoolapi.dev/T6xAX6/links/${id}`, requestOptions).then(response => response.json()).then(setLinksInBackend(linksInBackend.filter(link => link.id !== id)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(LinkEditorCard, {\n      className: \"link-editor-card\",\n      links: linksInBackend,\n      title: \"Add New Links\",\n      updateLinks: updateLinks,\n      addLink: addLink,\n      deleteLink: deleteLink\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LinkPreviewCard, {\n      className: \"link-preview-card\",\n      links: linksInBackend,\n      title: \"Link Preview\",\n      updateClicks: updateClicks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mqzr+A6JDz+77pdPl6ZqdTevgA0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dominic.dabrowiecki/Desktop/Link-Editor/link-editor/src/App.js"],"names":["LinkEditorCard","LinkPreviewCard","useState","useEffect","App","linksInBackend","setLinksInBackend","getInitialData","fetch","then","response","json","result","updateLinks","linkObject","requestOptions","method","headers","body","JSON","stringify","id","map","link","updateClicks","clicks","addLink","concat","deleteLink","filter"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport LinkEditorCard from \"./Components/LinkEditorCard/LinkEditorCard\";\nimport LinkPreviewCard from \"./Components/LinkPreviewCard/LinkPreviewCard\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [linksInBackend, setLinksInBackend] = useState([]);\n\n  useEffect(() => {\n    function getInitialData() {\n      return fetch(\"https://retoolapi.dev/T6xAX6/links\").then((response) =>\n        response.json()\n      );\n    }\n\n    getInitialData().then((result) => setLinksInBackend(result));\n  }, []);\n\n  const updateLinks = (linkObject) => {\n    const requestOptions = {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(linkObject),\n    };\n    fetch(`https://retoolapi.dev/T6xAX6/links/${linkObject.id}`, requestOptions)\n    .then((response) => response.json())\n      .then(setLinksInBackend(linksInBackend.map((link) => link.id === linkObject.id ? linkObject : link))\n    );\n  };\n\n  const updateClicks = (linkObject) => {\n    const { clicks } = linkObject;\n    const requestOptions = {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({clicks: clicks}),\n    };\n    fetch(`https://retoolapi.dev/T6xAX6/links/${linkObject.id}`, requestOptions)\n  }\n\n  const addLink = (linkObject) => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(linkObject),\n    };\n    fetch(\"https://retoolapi.dev/T6xAX6/links\", requestOptions)\n      .then((response) => response.json())\n      .then((link) => setLinksInBackend(linksInBackend.concat([link])));\n  };\n\n  const deleteLink = (id) => {\n    const requestOptions = {\n      method: \"DELETE\",\n    };\n    fetch(`https://retoolapi.dev/T6xAX6/links/${id}`, requestOptions)\n      .then((response) => response.json())\n      .then(setLinksInBackend(linksInBackend.filter((link) => link.id !== id))\n      );\n  };\n\n  return (\n    <div className=\"App\">\n      <LinkEditorCard\n        className=\"link-editor-card\"\n        links={linksInBackend}\n        title={\"Add New Links\"}\n        updateLinks={updateLinks}\n        addLink={addLink}\n        deleteLink={deleteLink}\n      />\n      <LinkPreviewCard\n        className=\"link-preview-card\"\n        links={linksInBackend}\n        title={\"Link Preview\"}\n        updateClicks={updateClicks}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}